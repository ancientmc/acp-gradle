plugins {
    id 'java-library'
    id 'java-gradle-plugin'
    id 'maven-publish'
}

group 'com.ancientmc.acp'
version '0.2.0-beta-dev'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

repositories {
    mavenCentral()
    mavenLocal()
}

sourceSets {
    acp
}

configurations {
    acpImplementation
    implementation.extendsFrom acpImplementation
}

dependencies {
    acpImplementation gradleApi()
    acpImplementation 'commons-io:commons-io:2.11.0'
    acpImplementation 'com.google.code.gson:gson:2.10.1'
}

gradlePlugin {
    plugins {
        acp {
            id = 'com.ancientmc.acp'
            displayName = 'acp-plugin'
            description = 'Gradle plugin for Ancient Coder Pack (ACP) processes.'
            implementationClass = 'com.ancientmc.acp.ACPPlugin'
        }
    }
}

jar {
    from sourceSets.acp.output
    manifest {
        attributes(
                'Implementation-Title': 'acp-gradle',
                'Implementation-Version': version,
                'Main-Class': 'com.ancientmc.acp.ACPPlugin'
        )
    }
}

publishing {
    publications {
        pluginMaven(MavenPublication) {
            groupId = project.group
            artifactId = 'acp-gradle'
            version = project.version
            pom {
                name = 'acp-gradle'
                description = 'Gradle plugin for Ancient Coder Pack (ACP) processes.'
                url = 'https://github.com/ancientmc/acp-gradle'
                licenses {
                    license {
                        name = 'AncientMC License'
                        url = 'https://github.com/ancientmc/license/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'mason'
                        name = 'Mason'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = 'ancientmc-maven'
            url = 'D:\\Programs\\Projects\\AncientMC\\ancientmc-maven\\'
        }
    }
}